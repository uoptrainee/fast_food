import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.indigo100,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(30.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.secondaryContainer,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.onPrimaryContainer.withOpacity(1),
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.blue90001,
          fontSize: 48.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w800,
        ),
        headlineLarge: TextStyle(
          color: appTheme.blue900,
          fontSize: 32.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.indigo100,
          fontSize: 24.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w800,
        ),
        titleLarge: TextStyle(
          color: appTheme.blue900,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0X00D9D9D9),
    primaryContainer: Color(0XFF173FCF),
    secondaryContainer: Color(0XFFD9D9D9),

    // Error colors
    errorContainer: Color(0XFFF37B0C),
    onErrorContainer: Color(0XFF151516),

    // On colors(text colors)
    onPrimary: Color(0XF30E20C0),
    onPrimaryContainer: Color(0XC6FFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue600 => Color(0XFF167FE0);
  Color get blue800 => Color(0XFF136FC4);
  Color get blue900 => Color(0XFF1826BB);
  Color get blue90001 => Color(0XFF0D21D1);
  Color get blueA200 => Color(0XFF5686E1);

  // BlueGray
  Color get blueGray100 => Color(0XFFD4D5EC);
  Color get blueGray10001 => Color(0XFFD1D2E6);
  Color get blueGray10002 => Color(0XFFD7D8DB);
  Color get blueGray10003 => Color(0XFFD5D5DB);
  Color get blueGray200 => Color(0XFFAEB0D0);
  Color get blueGray20001 => Color(0XFFA8BFD5);

  // Gray
  Color get gray100 => Color(0XFFF2F3F9);
  Color get gray400 => Color(0XFFB7B7B7);

  // Grayf
  Color get gray9007f => Color(0X7F141416);

  // Indigo
  Color get indigo100 => Color(0XFFC6C8E3);
  Color get indigo300 => Color(0XFF6E73DA);
  Color get indigo30001 => Color(0XFF7176E1);
  Color get indigo30002 => Color(0XFF6D72D9);
  Color get indigoA700 => Color(0XFF0B2FEA);

  // IndigoB
  Color get indigo200B5 => Color(0XB5989BCA);

  // IndigoCe
  Color get indigo600Ce => Color(0XCE4045AD);

  // IndigoD
  Color get indigo600D0 => Color(0XD04246AE);

  // Lime
  Color get lime900 => Color(0XFFAF6815);

  // Red
  Color get red800 => Color(0XFFC52727);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
